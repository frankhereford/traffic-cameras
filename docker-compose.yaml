services:
  postgis:
    image: postgis/postgis
    # ports:
      # - 5430:5432
    environment:
      POSTGRES_DB: cameras
      POSTGRES_PASSWORD: cameras
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - db_data:/var/lib/postgresql/data

  nextjs:
    build:
      context: ./nextjs
    volumes:
      - ./nextjs:/app
    # ports:
      # - 2999:3000
      #- 5555:5555
    depends_on:
      - postgis

  flask:
    build:
      context: ./python
    volumes:
      - ./python:/app
    # ports:
    #   - 5000:5000
    depends_on:
      - postgis
    command: ["python", "app.py", "--mode=flask"]

  # works, but is CPU bound üêå
  # better is to figure out how to run it locally on the metal

  detector:
    build:
      context: ./python
    volumes:
      - ./python:/app
    depends_on:
      - postgis
    env_file:
      - ./python/env
    command: ["python", "app.py", "--mode=detector"]

  haproxy:
    image: haproxy:latest
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
      - ./haproxy/ssl:/usr/local/etc/haproxy/ssl:ro
    ports:
      - 80:80
      - 443:443
      #- 3000:3000
    depends_on:
      - nextjs
      - flask
      - postgrest
      - swagger

  redis:
    image: redis:latest
    # ports:
    #   - 6379:6379

  postgrest:
    image: postgrest/postgrest
    #ports:
      #- 3001:3000
    environment:
      PGRST_DB_URI: postgres://postgres:cameras@postgis/cameras
      PGRST_DB_ANON_ROLE: postgrest_ro
      PGRST_OPENAPI_SERVER_PROXY_URI: https://umop-episdn.org/openapi
      PGRST_LOG_LEVEL: info

      # PGRST_LOG_QUERY: main_query
    depends_on:
      - postgis

  swagger:
    image: swaggerapi/swagger-ui
    ports:
      - "8080:8080"
    expose:
      - "8080"
    environment:
      API_URL: https://umop-episdn.org/openapi
    depends_on:
      - postgrest
      - postgis

volumes:
  db_data:
