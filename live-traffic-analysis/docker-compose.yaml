version: "3"
services:
  haproxy:
    image: haproxy:latest
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
      - ./haproxy/ssl:/etc/ssl/private/
    ports:
      - 80:80
      - 443:443
      - 444:444
  #   depends_on:
  #     - nextjs
  #     - flask

  redis:
    image: redis:latest
    ports:
      - 6379:6379

  download:
    build:
      context: ./download
    entrypoint: ["/application/download_and_serve.py", "ByED80IKdIU"]
    volumes:
      - ./download/media:/application/media
      - ./download:/application

  inference:
    build:
      context: ./inference
    volumes:
      - ./inference:/app
    env_file:
      - ./inference/.env

  media:
    image: datarhei/restreamer:latest
    restart: unless-stopped
    volumes:
      - ./media/config:/core/config
      - ./media/data:/core/data
    ports:
      - "8080:8080"
      - "8181:8181"
      - "1935:1935"
      - "1936:1936"
      - "6000:6000/udp"
      - "554:554/udp"

  # live_camera_postgis:
  #   build:
  #     context: ./live_camera_postgis
  #   ports:
  #     - 5431:5432
  #   environment:
  #     POSTGRES_DB: live_cameras
  #     POSTGRES_PASSWORD: cameras
  #     POSTGRES_HOST_AUTH_METHOD: trust
  #   volumes:
  #     - db_live_camera_data:/var/lib/postgresql/data
  #     - ./live_camera_postgis/seed.sql:/docker-entrypoint-initdb.d/seed.sql

  metabase:
    image: metabase/metabase:latest
    ports:
      - 3000:3000
    env_file:
      - ./metabase/.env
# volumes:
#   db_data:
#   db_live_camera_data:
