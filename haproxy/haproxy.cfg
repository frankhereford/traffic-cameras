# haproxy.cfg
global
    daemon
    maxconn 256

    ssl-default-bind-curves X25519:prime256v1:secp384r1
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-options prefer-client-ciphers ssl-min-ver TLSv1.2 no-tls-tickets

    ssl-default-server-curves X25519:prime256v1:secp384r1
    ssl-default-server-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305
    ssl-default-server-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-server-options ssl-min-ver TLSv1.2 no-tls-tickets
    log stdout local0 info

defaults
    mode http
    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms

frontend http-in
    bind *:80
    redirect scheme https code 301 if !{ ssl_fc }

frontend https-in
    bind *:443 ssl crt /usr/local/etc/haproxy/ssl/umop-episdn.org.pem
    acl path_flask path_beg -i /flask
    acl path_postgrest path_beg -i /openapi
    acl path_postgrest_exact path -i /openapi
    acl path_swagger path_beg -i /swagger
    acl path_swagger_exact path -i /swagger
    redirect location /swagger/ if path_swagger_exact
    redirect location /openapi/ if path_postgrest_exact
    use_backend flask_servers if path_flask
    use_backend postgrest_servers if path_postgrest
    use_backend swagger_servers if path_swagger
    default_backend nextjs_servers

frontend http-in-3000
    bind *:3000
    acl is_root path -i /
    # redirect location / if is_root
    default_backend nextjs_servers

backend nextjs_servers
    server server1 nextjs:3000 check

backend flask_servers
    http-request replace-path ^/flask(/.*)? /\1
    server server1 flask:5000 check

backend postgrest_servers
    http-request replace-path ^/openapi/?(.*)? /\1
    server server1 postgrest:3000 check

backend swagger_servers
    http-request replace-path ^/swagger(/.*)? /\1
    server server1 swagger:8080 check
